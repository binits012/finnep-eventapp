import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import Script from 'next/script';
import { DataProvider } from '@/contexts/DataContext';
import { LocaleProvider } from '@/contexts/LocaleContext';
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Finnep  Events application",
  description: "Generated by Finnep for you all ",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased overflow-x-hidden`}
        suppressHydrationWarning
      >
        {/* Pre-hydration theme init: supports 'light' | 'dark' | 'system' (default) */}
        <Script id="theme-init" strategy="beforeInteractive">
          {`(function(){try{var d=document.documentElement;var s=localStorage.getItem('theme')||'dark';var mq=window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)');var prefersDark=mq&&mq.matches;var t=(s==='light'||s==='dark')?s:(prefersDark?'dark':'light');if(t==='dark'){d.classList.add('dark');d.setAttribute('data-theme','dark');}else{d.classList.remove('dark');d.setAttribute('data-theme','light');}}catch(e){}})();`}
        </Script>

        {/* Runtime theme controller: window.__setTheme(mode) with OS change sync in 'system' */}
        <Script id="theme-runtime" strategy="afterInteractive">
          {`(function(){try{var d=document.documentElement;var mq=window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)');var osListener=null;function apply(theme){if(theme==='dark'){d.classList.add('dark');d.setAttribute('data-theme','dark');}else if(theme==='light'){d.classList.remove('dark');d.setAttribute('data-theme','light');}else{var effective=(mq&&mq.matches)?'dark':'light';if(effective==='dark'){d.classList.add('dark');d.setAttribute('data-theme','dark');}else{d.classList.remove('dark');d.setAttribute('data-theme','light');}}}function setTheme(mode){try{if(mode!=='light'&&mode!=='dark'&&mode!=='system'){mode='system';}localStorage.setItem('theme',mode);apply(mode);if(osListener&&mq){mq.removeEventListener('change',osListener);osListener=null;}if(mode==='system'&&mq){osListener=function(){apply('system');};mq.addEventListener('change',osListener);} }catch(e){}};window.__setTheme=setTheme;var stored=localStorage.getItem('theme')||'dark';apply(stored);if(stored==='system'&&mq){osListener=function(){apply('system');};mq.addEventListener('change',osListener);}window.addEventListener('storage',function(ev){if(ev.key==='theme'){var val=ev.newValue||'dark';apply(val);}});}catch(e){}})();`}
        </Script>

        <LocaleProvider>
          <DataProvider>
            <Header />
            <main className="pt-24">{children}</main>
            <Footer />
          </DataProvider>
        </LocaleProvider>
      </body>
    </html>
  );
}
